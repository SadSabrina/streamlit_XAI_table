import streamlit as st
import pandas as pd
from xai_table_functions import plot_data_with_hyperlinks, filter_dataframe
import plotly.graph_objects as go

st.set_page_config(page_title="RUS", page_icon="üá∑üá∫")

@st.cache_data
def get_data():
    path = r'./data/merged_table.csv'

    return pd.read_csv(path, index_col=0)


# Title
st.title('Find a way to make your AI explainable')

# Annotation

st.markdown('''
–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â—É—é –º–µ—Ç–æ–¥—ã –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π, –ø–æ–¥ —Å–≤–æ—é –∑–∞–¥–∞—á—É. \

–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫ –±—ã–ª–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏ \
–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏. –ë—ã–ª–æ –≤—ã—è–≤–ª–µ–Ω–æ, —á—Ç–æ –ø—Ä–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ \
 –≤—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç:

- —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –æ–±—É—á–µ–Ω–∞ –º–æ–¥–µ–ª—å
- —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–¥–µ–ª—å –±—ã–ª–∞ –æ–±—É—á–µ–Ω–∞
            
–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –∑–¥–µ—Å—å.

**–ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –æ–± Explainable AI:**

- –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ ["Interpretable Machine Learning"](https://christophm.github.io/interpretable-ml-book/), –∞–≤—Ç–æ—Ä –ö—Ä–∏—Å—Ç–æ—Ñ –ú–æ–ª–Ω–∞—Ä
- –ú–æ–π [DataBlog](https://t.me/jdata_blog), –æ–± XAI –∏ –Ω–µ —Ç–æ–ª—å–∫–æ =)           
''')

st.markdown('''Tg: [@sabrina_sadiekh](https://t.me/sabrina_sadiekh)''')

st.markdown('''LinkedIn: [Sabrina Sadiekh](https://www.linkedin.com/in/sabrina-sadiekh-35181a286/?trk=nav_responsive_tab_profile_pic&originalSubdomain=ru)''')


# Data
merged_table = get_data()

# Frameworks list
FRAMEWORKS = ['skorch', 'scikit-learn', 'SciPy', 'LightGBM', 'tensorflow', 'XGBoost', 'lightning', 'sklearn-crfsuite',
              'Keras',  'transformers', 'pyspark', 'pytorch', 'CatBoost', 'h2o']

#DTYPES
DTYPES = ['Tabular', 'Images', 'Texts', 'Graph', 'Time Series']


framework_choice = st.selectbox('Select your framework', FRAMEWORKS, index=None,
                                placeholder='Select your framework')
data_type_choice = st.selectbox('Select your data type:', DTYPES, index=None,
                                placeholder='Select your data type')
if framework_choice or data_type_choice:

    data_to_schow = filter_dataframe(merged_table, framework_choice, data_type_choice)
    fig = plot_data_with_hyperlinks(data_to_schow)
    st.plotly_chart(fig, use_container_width=True)


#Libraries with metrics

st.markdown('''–ë–∏–±–∏–ª–∏–æ—Ç–µ–∫–∏ —Å **–º–µ—Ç—Ä–∏–∫–∞–º–∏** –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏''')
st.markdown('''
            - [Quantus](https://github.com/understandable-machine-intelligence-lab/Quantus)
            - [shapash](https://github.com/MAIF/shapash#how_shapash_works)
            - [AIX360](https://github.com/Trusted-AI/AIX360)''')